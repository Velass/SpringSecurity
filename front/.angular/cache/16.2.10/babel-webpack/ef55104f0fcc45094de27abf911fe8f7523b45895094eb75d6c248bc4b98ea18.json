{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/data/data.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.user = {\n      email: '',\n      password: ''\n    };\n  }\n  onSubmit(ngForm) {\n    console.log(ngForm.value);\n    this.dataService.login(ngForm.value).subscribe(res => {\n      console.log(\"res\" + JSON.stringify(res));\n    });\n    // Ajoutez ici la logique pour gérer la soumission du formulaire (envoi à votre backend, etc.)\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [\"ngForm\", \"ngForm\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/signup\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Connexion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Mot de passe :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Se connecter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Vous n'avez pas de compte ? \");\n        i0.ɵɵelementStart(15, \"a\", 8);\n        i0.ɵɵtext(16, \"Cr\\u00E9er un compte\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.RouterLink],\n    styles: [\"\\n\\n\\n.login-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: auto;\\n    text-align: center;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    margin-top: 50px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 8px;\\n  }\\n  \\n  input[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    margin-bottom: 16px;\\n    box-sizing: border-box;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 10px 15px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:disabled {\\n    background-color: #cccccc;\\n    cursor: not-allowed;\\n  }\\n  \\n  p[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7O0FBRXhCO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBsb2dpbi5jb21wb25lbnQuY3NzICovXHJcblxyXG4ubG9naW4tY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gIH1cclxuICBcclxuICBwIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","dataService","user","email","password","onSubmit","ngForm","console","log","value","login","subscribe","res","JSON","stringify","_","i0","ɵɵdirectiveInject","i1","DataService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵadvance","ɵɵproperty","form","valid"],"sources":["C:\\Users\\pc\\Desktop\\diginamic\\19. Spring\\Depot\\Depot4\\2023-11-16-spring-security_mini-projet\\front\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\pc\\Desktop\\diginamic\\19. Spring\\Depot\\Depot4\\2023-11-16-spring-security_mini-projet\\front\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DataService } from 'src/app/service/data/data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private dataService : DataService){}\n  user = {\n    email: '',\n    password: ''\n  };\n\n  onSubmit(ngForm : NgForm) {\n    console.log(ngForm.value);\n    this.dataService.login(ngForm.value).subscribe(res =>{\n      console.log(\"res\" + JSON.stringify(res))\n    })\n    // Ajoutez ici la logique pour gérer la soumission du formulaire (envoi à votre backend, etc.)\n  }\n}\n","<!-- login.component.html -->\n\n<div class=\"login-container\">\n    <h2>Connexion</h2>\n    <form (ngSubmit)=\"onSubmit(ngForm)\" #ngForm=\"ngForm\">\n      <label for=\"email\">Email :</label>\n      <input type=\"email\" id=\"email\" name=\"email\" ngModel required>\n  \n      <label for=\"password\">Mot de passe :</label>\n      <input type=\"password\" id=\"password\" name=\"password\" ngModel required>\n  \n      <button type=\"submit\" [disabled]=\"!ngForm.form.valid\">Se connecter</button>\n    </form>\n  \n    <p>Vous n'avez pas de compte ? <a routerLink=\"/signup\">Créer un compte</a></p>\n  </div>\n  "],"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;IAC/B,KAAAC,IAAI,GAAG;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAJ8C;EAM/CC,QAAQA,CAACC,MAAe;IACtBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,KAAK,CAAC;IACzB,IAAI,CAACR,WAAW,CAACS,KAAK,CAACJ,MAAM,CAACG,KAAK,CAAC,CAACE,SAAS,CAACC,GAAG,IAAG;MACnDL,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGK,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC,CAAC;IAC1C,CAAC,CAAC;IACF;EACF;EAAC,QAAAG,CAAA,G;qBAbUhB,cAAc,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdrB,cAAc;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCP3BX,EAAA,CAAAa,cAAA,aAA6B;QACrBb,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAClBf,EAAA,CAAAa,cAAA,iBAAqD;QAA/Cb,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAApB,EAAA,CAAAqB,WAAA;UAAA,OAAYrB,EAAA,CAAAsB,WAAA,CAAAV,GAAA,CAAAvB,QAAA,CAAA+B,GAAA,CAAgB;QAAA,EAAC;QACjCpB,EAAA,CAAAa,cAAA,eAAmB;QAAAb,EAAA,CAAAc,MAAA,cAAO;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAClCf,EAAA,CAAAuB,SAAA,eAA6D;QAE7DvB,EAAA,CAAAa,cAAA,eAAsB;QAAAb,EAAA,CAAAc,MAAA,qBAAc;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAC5Cf,EAAA,CAAAuB,SAAA,gBAAsE;QAEtEvB,EAAA,CAAAa,cAAA,iBAAsD;QAAAb,EAAA,CAAAc,MAAA,oBAAY;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAG7Ef,EAAA,CAAAa,cAAA,SAAG;QAAAb,EAAA,CAAAc,MAAA,oCAA4B;QAAAd,EAAA,CAAAa,cAAA,YAAwB;QAAAb,EAAA,CAAAc,MAAA,4BAAe;QAAAd,EAAA,CAAAe,YAAA,EAAI;;;;QAHlDf,EAAA,CAAAwB,SAAA,IAA+B;QAA/BxB,EAAA,CAAAyB,UAAA,cAAAL,GAAA,CAAAM,IAAA,CAAAC,KAAA,CAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}